<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>GradeBin - Dashboard</title>
     <link rel="icon" type="image/png" href="/images/Gb.png">
    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600;700&display=swap" rel="stylesheet">

    <!-- Tailwind CDN -->
    <script src="https://cdn.tailwindcss.com"></script>
    <script>
        tailwind.config = {
            theme: {
                extend: {
                    fontFamily: {
                        poppins: ['Poppins', 'sans-serif']
                    },
                }
            }
        }
    </script>
</head>

<body class="font-poppins text-white min-h-screen bg-cover bg-center bg-fixed"
    style="background-image: linear-gradient(rgba(0,0,0,0.6), rgba(0,0,0,0.6)), url('./images/bg.png');">

    <!-- header -->
    <%- include('components/header') %>

    <!-- Content Box -->
    <main class="max-w-4xl mx-auto mt-12 bg-gray-800 bg-opacity-80 p-8 rounded-2xl shadow-xl">

        <!-- Title + Search -->
        <div class="flex justify-between items-center mb-6 flex-wrap gap-4">
            <h2 class="text-3xl font-bold">Find Your Papers</h2>

            <!-- Search Box -->
            <div class="relative">
                <p class="mb-2 text-gray-300 text-sm italic">Didnâ€™t spot your paper? Search it instantly!</p>
                <input type="text" id="liveSearch" placeholder="Search papers..."
                    class="bg-gray-700 text-white border border-gray-600 rounded-full py-2 pl-5 pr-12 focus:ring-2 focus:ring-[#ff7200] focus:outline-none shadow-lg w-64 transition">
                <div id="liveResults" class="mt-2 bg-gray-800 rounded-lg shadow max-h-60 overflow-y-auto"></div>
                <button
                    class="absolute right-3 top-1/2 -translate-y-1/2 text-[#ff7200] hover:text-white transition">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-11 w-5" fill="none" viewBox="0 -10 24 10"
                        stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                            d="M21 21l-4.35-4.35m0 0A7.5 7.5 0 1110.5 3a7.5 7.5 0 016.15 13.65z" />
                    </svg>
                </button>
            </div>
        </div>

        <p class="mb-8 mt-16 text-gray-300">Select department, year, and paper type to get started.</p>

        <!-- Dropdowns -->
        <div class="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
            <select id="department" class="bg-gray-700 text-white border border-gray-600 rounded-lg p-3">
                <option value="">Select Department</option>
                <option value="Basic Science and Humanities">Basic Science and Humanities</option>
                <option value="Computer Science and Engineering">Computer Science and Engineering</option>
                <option value="Artificial Intelligence and Data Science">Artificial Intelligence and Data Science</option>
                <option value="Computer Science and Design">Computer Science and Design</option>
                <option value="Mechanical Engineering">Mechanical Engineering</option>
                <option value="Civil Engineering">Civil Engineering</option>
                <option value="Electrical Engineering">Electrical Engineering</option>
                <option value="Electronics and Computer Engineering">Electronics and Computer Engineering</option>
                <option value="Agriculture Engineering">Agriculture Engineering</option>
                <option value="Plastic and Polymer">Plastic and Polymer</option>
            </select>

            <select id="year" class="bg-gray-700 text-white border border-gray-600 rounded-lg p-3">
                <option value="">Select Year</option>
                <option value="1">1st Year</option>
                <option value="2">2nd Year</option>
                <option value="3">3rd Year</option>
                <option value="4">4th Year</option>
            </select>

            <select id="type" class="bg-gray-700 text-white border border-gray-600 rounded-lg p-3">
                <option value="">Select Paper Type</option>
                <option value="ESE">ESE</option>
                <option value="MSE">MSE</option>
                <option value="Backlog">Backlog</option>
                <option value="Makeup">Makeup</option>
            </select>

            <select id="subject" class="bg-gray-700 text-white border border-gray-600 rounded-lg p-3">
                <option value="">Select Subject</option>
            </select>
        </div>

        <!-- Search Button -->
        <div class="text-center mb-10">
            <button id="searchBtn"
                class="px-8 py-3 bg-blue-600 hover:bg-blue-700 rounded-lg shadow-lg text-lg font-semibold transition">
                View
            </button>
        </div>

        <!-- Results -->
        <div id="results" class="space-y-4"></div>

    </main>

    <script>
        const liveSearchInput = document.getElementById('liveSearch');
        const liveResults = document.getElementById('liveResults');
        let debounceTimeout;

        liveSearchInput.addEventListener('input', () => {
            const query = liveSearchInput.value.trim();
            clearTimeout(debounceTimeout);

            if (query.length < 3) {
                liveResults.innerHTML = '';
                return;
            }

            debounceTimeout = setTimeout(async () => {
                try {
                    const res = await fetch(`/papers/search?subject=${encodeURIComponent(query)}`);
                    const data = await res.json();

                    if (Array.isArray(data) && data.length > 0) {
                        liveResults.innerHTML = data.map(paper => `
                            <div class="p-3 border-b border-gray-700 hover:bg-gray-700 cursor-pointer">
                                <h3 class="font-semibold">${paper.name}</h3>
                                <p>Dept: ${paper.department} | Year: ${paper.year} | Type: ${paper.type} | Academic Year : ${paper.acyear}</p>
                                <a href="/papers/view?driveLink=${encodeURIComponent(paper.driveLink)}" class="text-orange-400 underline">Open Paper</a>
                            </div>
                        `).join('');
                    } else {
                        liveResults.innerHTML = '<p class="p-3 text-gray-400">No papers found</p>';
                    }
                } catch (err) {
                    console.error('Live search error:', err);
                    liveResults.innerHTML = '<p class="p-3 text-red-500">Error fetching papers</p>';
                }
            }, 300);
        });

        const departmentEl = document.getElementById("department");
        const yearEl = document.getElementById("year");
        const subjectEl = document.getElementById("subject");
        const searchBtn = document.getElementById("searchBtn");
        const resultsEl = document.getElementById("results");

        async function fetchSubjects() {
            const department = departmentEl.value;
            const year = yearEl.value;

            if (department && year) {
                try {
                    const res = await fetch(`/papers/subjects?department=${encodeURIComponent(department)}&year=${encodeURIComponent(year)}`);
                    const subjects = await res.json();

                    subjectEl.innerHTML = '<option value="">Select Subject</option>';

                    if (Array.isArray(subjects)) {
                        subjects.forEach(sub => {
                            const option = document.createElement("option");
                            option.value = sub;
                            option.textContent = sub;
                            subjectEl.appendChild(option);
                        });
                    }
                } catch (err) {
                    console.error("Error fetching subjects:", err);
                }
            }
        }

        departmentEl.addEventListener("change", fetchSubjects);
        yearEl.addEventListener("change", fetchSubjects);

        async function searchPapers() {
            const department = departmentEl.value;
            const year = yearEl.value;
            const type = document.getElementById("type").value;
            const subject = subjectEl.value;

            const params = new URLSearchParams();
            if (department) params.append("department", department);
            if (year) params.append("year", year);
            if (type) params.append("type", type);
            if (subject) params.append("subject", subject);

            try {
                const res = await fetch(`/papers/search?${params.toString()}`);
                const papers = await res.json();

                resultsEl.innerHTML = "";

                if (!Array.isArray(papers) || papers.length === 0) {
                    resultsEl.innerHTML = `<p class="text-gray-300">No papers found.</p>`;
                    return;
                }

                papers.forEach(paper => {
                    const div = document.createElement("div");
                    div.className = "bg-gray-700 p-6 rounded-xl shadow-lg flex justify-between items-center";
                    div.innerHTML = `
                        <div>
                          <h3 class="text-xl font-bold">${paper.name} - ${paper.type} ${paper.year} - Academic Year ${paper.acyear}</h3>
                          <p class="text-gray-300">Department: ${paper.department} | Year: ${paper.year} | Type: ${paper.type}</p>
                        </div>
                        <a href="/papers/view?driveLink=${encodeURIComponent(paper.driveLink)}"
                           class="px-5 py-2 bg-green-600 hover:bg-green-700 rounded-lg shadow-md text-white font-semibold transition">
                          Open
                        </a>
                    `;
                    resultsEl.appendChild(div);
                });
            } catch (err) {
                console.error("Error fetching papers:", err);
            }
        }

        searchBtn.addEventListener("click", searchPapers);
    </script>
</body>
</html>
